// { Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends


class Solution
{   
public:     
    vector<int> spirallyTraverse(vector<vector<int> > mat, int r, int c) 
    {
        // code here 
    vector<int>res;
    int rs=0,re=r-1,cs=0,ce=c-1;
    while(rs<=re && cs<=ce){
        for(int i=cs;i<=ce;i++){
            res.push_back(mat[rs][i]);
        }
        rs++;
        
        for(int j=rs;j<=re;j++){
            res.push_back(mat[j][ce]);
        }
        ce--;
        
        if(rs<=re){
        for(int i=ce;i>=cs;i--){
            res.push_back(mat[re][i]);
        }
        re--;
        }
        if(cs<=ce){
        for(int i=re;i>=rs;i--){
            res.push_back(mat[i][cs]);
        }
        cs++;
        }
    }
    return res;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends

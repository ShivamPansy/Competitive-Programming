Example 1:

Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]
Example 2:

Input: n = 1
Output: ["()"]


Solution:-


class Solution {
public:
    void parHelper(vector<string>& res,int n,int open,int close,string str){
        if(open<0 || open >n ||close<0 ||close>n||open<close){
            return;
        } 
        if(open==n && close==n){
            res.push_back(str);
            return;
        }
        
        parHelper(res,n,open+1,close,str+"(");
        parHelper(res,n,open,close+1,str+")");
    }
    
    vector<string> generateParenthesis(int n) {
        vector<string>result;
        parHelper(result,n,0,0,"");
        return result;
    }
};
